name: Build Workflow

run-name: 'Build Workflow -- ${{ github.head_ref || github.ref_name }}'

on:
    push:
    pull_request:
    workflow_dispatch:

env:
  BRANCH_NAME: ${{github.ref_name}}
  IS_TAG: ${{contains(github.ref_type, 'tag')}}

jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-24.04
    outputs:
      RELEASE_UPLOAD_URL: ${{steps.upload_url.outputs.RELEASE_UPLOAD_URL}}
    steps:
      - uses: actions/setup-java@v4
        with:
            java-version: '21'
            distribution: 'zulu'

      # - name: Build IKMDEV Code
      #   uses: ikmdev/maven-clean-install-build-action@pre-sonar
      #   with:
      #     branch_name: ${{env.BRANCH_NAME}}

      - name: Get Release URL (Tag)
        id: get_tag_release_url
        if: env.IS_TAG == 'true'
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{github.repository}}/releases/tags/${{env.BRANCH_NAME}}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
           
      
      - name: Print Info
        if: env.IS_TAG == 'true'
        id: upload_url
        run: | 
         echo "RELEASE_UPLOAD_URL=${{fromJson(steps.get_tag_release_url.outputs.data).upload_url}}" >> $GITHUB_OUTPUT
     

  generate_build_installers:
    name: Generate Release Installers
    needs: build-job
    strategy:
      matrix:
        os: [macos-13, macos-14, ubuntu-20.04, windows-2022]
    runs-on: ${{matrix.os}}
    steps:
       - name: Checkout Code Repository
         uses: actions/checkout@v4
    
       - name: Setup Java
         uses: actions/setup-java@v4
         with:
            distribution: 'zulu'
            java-version: '21'

       - name: Composite Action
         uses: ./.github/composite
         with:
            branch_name: ${{ env.BRANCH_NAME }}
            isTag: ${{env.IS_TAG}}
            release_upload_url: ${{ needs.build-job.outputs.RELEASE_UPLOAD_URL || '' }}
            github_token: ${{secrets.GITHUB_TOKEN}}
            operating_system: ${{matrix.os}}

  sign_installers:
     name: Sign Installers
    #  needs: generate_build_installers
     runs-on: cloud-hsm-v2
     steps:
        - name: Checkout Code Repository
          uses: actions/checkout@v4

        - name: Download Artifacts
          uses: actions/download-artifact@v4
          with:
            path: ~\Installers

          
        - name: Display Downloaded Files
          run: ls ~\Installers
  

        # - name: Sign Stuff
        #   run: |
        #     whoami
        #     cd "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64"
        #     .\signtool.exe sign /v /fd sha256 /sha1 ${{secrets.CLOUDHSM_HASH}} /sm /as C:\Windows\ServiceProfiles\NetworkService\Installers\Komet-SNAPSHOT-linux-main-1.52.99\komet-snapshot-linux-main-1.52.99-1.x86_64.rpm
            

        # - name: upload linux artifact
        #   uses: actions/upload-release-asset@v1
        #   if: steps.verify_snapshot.outputs.isSnapshot == 'false' && inputs.isTag == 'true'
        #   env:
        #     GITHUB_TOKEN: ${{ inputs.github_token}}
        #   with:
        #     upload_url: ${{ inputs.release_upload_url }}
        #     asset_path: ./application/target/dist/installer/${{steps.get_installer_name.outputs.INSTALLER_NAME}}
        #     asset_name: ${{fromJson(steps.get_asset_name_and_type.outputs.result).assetName}}
        #     asset_content_type: application/${{fromJson(steps.get_asset_name_and_type.outputs.result).asset_type}}

